bdata <- read.csv(file="BM.csv",head=TRUE,sep=",")
summary(data)
summary(bdata)
View(bdata)
View(bdata)
dcompleta <- bdata( !is.na(Q1.1) )
dcompleta <- subset( bdata, !is.na(bdata) )
View(dcompleta)
View(bdata)
View(bdata)
dcompleta <- subset( bdata, !is.na(bdata$Q1.1) )
View(dcompleta)
con <- gzfile("words.gz")
con
x <- readLines(con, 10)
x <- readLines(con, 10)
con <- gzfile("words.gz")
con
help("readLines")
con <- gzfile("words.gz")
con <- gzfile("words.gz")
x <- readLines(con, 10)
con <- url("htpp://www.jsph.edu","r")
help("url")
help("url")
help("url")
y <- data.frame(a=1, b="a")
con <- close("words.gz")
y <- data.frame(a=1, b="a")
dput(y)
y
dput(y,file="y.R")
new.y <- dget("y.R")
y
new.y
x <- "foo"
x
y <- data.frame (a=1, b="a")
y
dump(c("x","y"), file="data.R")
rm(x,y)
source ("data.R")
5:1
order(5:1)
order(1:5)
order(c(4,5,7))
order(c(4,9,5,7))
x <- c(4,9,5,7)
x[order(x)]
data(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
data(mtcars)
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
View(mtcars)
split(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed()
set.seed(2)
rpois(5, 2)
set.seed(1)
rnorm(5)
rnorm(5)
rnorm(5)
rnorm(5)
rnorm(5)
rpois(10,1)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(y,x)
plot(x,y)
x
e
y
plot(y)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(y)
plot(y)
x
e
y
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
x1 = 1:5
x1
x2 = 5:9+4
x2
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
install.packages(c("evaluate", "swirl"))
install.packages("KernSmooth")
load(KernSmooth)
?KernSmooth
library("KernSmooth", lib.loc="C:/Users/jparedes.ICA/Documents/R/win-library/3.1")
detach("package:KernSmooth", unload=TRUE)
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.1.0/library")
detach("package:KernSmooth", unload=TRUE)
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.1.0/library")
library("KernSmooth", lib.loc="C:/Users/jparedes.ICA/Documents/R/win-library/3.1")
detach("package:KernSmooth", unload=TRUE)
remove.packages(KernSmooth, lib.loc="C:/Users/jparedes.ICA/Documents/R/win-library/3.1")
remove.packages(KernSmooth, lib)
library("KernSmooth", lib.loc="C:/Users/jparedes.ICA/Documents/R/win-library/3.1")
detach("package:KernSmooth", unload=TRUE)
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.1.0/library")
detach("package:KernSmooth", unload=TRUE)
remove.packages("KernSmooth")
install.packages("ggplot2")
# importing data into a dataframe
iris.dat <- read.table("iris_short.txt", header=T)
# plot the data
# first 50 data are Setosa and the second 50 Versicolor
plot(iris.dat[1:50,2:3], xlim=c(4.3, 7.0),ylim=c(1.0, 5.1), pch=1, col="red", main="Iris Data")
points(iris.dat[51:100, 2:3], pch=1, col="darkgreen")
# legend (#xcoord, #ycoord, col=c("colors"), pch=c("shape of points"), text.col=c("textcolor")
# legend=c("actual text you want to use")
legend(4.5, 4.9, col=c("red", "darkgreen"), pch=c(1,1), text.col=c("red", "darkgreen"), legend=c("Setosa", "Versicolor"))
# library class is required for knn
library(class)
# generating 100 data points in the range of (4.3, 7.0) and (1.0, 5.1)
x1<-seq(4.3, 7.0, len=100)
x2<-seq(1.0, 5.1, len=100)
x1.new<-rep(x1, 100)
x2.new<-rep(x2, rep(100,100))
iris.knn.2<-knn(iris.dat[,2:3], cl=iris.dat$species, test=cbind(x1.new, x2.new), k=2)
## plotting k nearest neighbors
# pt.col is color that will be assigned to each point based on what knn classifies the data as
# iris.knn.2 will have either 1 or 2.
# if iris.knn.2 >1, then take darkgreen, red o.w
pt.col<- ifelse(c(iris.knn.2) > 1, "darkgreen", "red")
# drawing points on the plot
points(x1.new, x2.new, col=pt.col, pch=20, cex=.1)
# drawing contour
contour(x1,x2,matrix(iris.knn.2,nc=100),add=T,nlevel=1,lty=1,drawlabel=F)
par(mar=c(4, 4, 2, 0.5))
par(mar=c(2,2,2,2))
ggplot(mtcars,aes(x=factor(cyl),y=mpg))+
geom_point()+
theme(axis.text.x = element_text(colour=”grey20″,size=20,angle=90,hjust=.5,vjust=.5,face=”plain”),
axis.text.y = element_text(colour=”grey20″,size=12,angle=0,hjust=1,vjust=0,face=”plain”),
axis.title.x = element_text(colour=”grey20″,size=12,angle=0,hjust=.5,vjust=0,face=”plain”),
axis.title.y = element_text(colour=”grey20″,size=12,angle=90,hjust=.5,vjust=.5,face=”plain”))
theme(axis.text.x=element_text(colour=”grey20″, size=10, face=”plain”))
install.packages("RWeka")
setwd("C:/Users/jparedes.ICA/Downloads/Cleaning Data/Project/UCI HAR Dataset")
###### Part 1: Merges the training and the test sets to create one data set.
# Reading Train
data_train <- read.table("./train/X_train.txt")          # 7352 x 561
label_train <- read.table("./train/y_train.txt")         # 7352 x 1
subject_train <- read.table("./train/subject_train.txt") # 7352 x 1
# Reading Test
data_test <- read.table("./test/X_test.txt")             # 2947 x 561
label_test <- read.table("./test/y_test.txt")            # 2947 x 1
subject_test <- read.table("./test/subject_test.txt")    # 2947 x 1
# Total = Train + Test
data_total <- rbind(data_train, data_test)               # 10299 x 561
label_total <- rbind(label_train, label_test)            # 10299 x 1
subject_total <- rbind(subject_train, subject_test)
features <- read.table("./features.txt") # 561 x 2
indices_MeanStd <- grep("mean\\(\\)|std\\(\\)", features[, 2]) # 66
data_total <- data_total[, indices_MeanStd] # 10299 x 66
View(data_total)
names(data_total) <- features[indices_MeanStd, 2]
View(data_total)
names(data_total) <- features[indices_MeanStd, 2]
###################### Part 3: ############################
# Uses descriptive activity names to name the
# activities in the data set
activity <- read.table("./data/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activityLabel <- activity[joinLabel[, 1], 2]
joinLabel[, 1] <- activityLabel
names(joinLabel) <- "activity"
activity <- read.table("./data/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activityLabel <- activity[label_total[, 1], 2]
joinLabel[, 1] <- activityLabel
names(joinLabel) <- "activity"
names(label_total) <- "activity"
activity <- read.table("./data/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activityLabel <- activity[label_total[, 1], 2]
joinLabel[, 1] <- activityLabel
names(label_total) <- "activity"
setwd("C:/Users/jparedes.ICA/Downloads/Cleaning Data/Project/UCI HAR Dataset")
activity <- read.table("./activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activityLabel <- activity[label_total[, 1], 2]
joinLabel[, 1] <- activityLabel
names(label_total) <- "activity"
activity <- read.table("./activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activityLabel <- activity[label_total[, 1], 2]
label_total[, 1] <- activityLabel
names(label_total) <- "activity"
View(activity)
activity <- read.table("./activity_labels.txt")
activity
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
activity
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
activity
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activity
activityLabel <- activity[label_total[, 1], 2]
activityLabel
sum(!is.na(activityLabel))
label_total[, 1] <- activityLabel
activityLabel
label_total
names(label_total) <- "activity"
label_total
activity <- read.table("./activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activity
activity <- read.table("./activity_labels.txt")
activity
activity <- read.table("./activity_labels.txt")
View(activity)
View(label_total)
names(label_total) <- "activity"
View(label_total)
View(label_total)
setwd("C:/Users/jparedes.ICA/Downloads/Cleaning Data/Project/UCI HAR Dataset")
###################### Part 1: ############################
# Merges the training and the test sets to create one data set.
# Reading Train
data_train <- read.table("./train/X_train.txt")          # 7352 x 561
label_train <- read.table("./train/y_train.txt")         # 7352 x 1
subject_train <- read.table("./train/subject_train.txt") # 7352 x 1
# Reading Test
data_test <- read.table("./test/X_test.txt")             # 2947 x 561
label_test <- read.table("./test/y_test.txt")            # 2947 x 1
subject_test <- read.table("./test/subject_test.txt")    # 2947 x 1
# Total = Train + Test
data_total <- rbind(data_train, data_test)               # 10299 x 561
label_total <- rbind(label_train, label_test)            # 10299 x 1
subject_total <- rbind(subject_train, subject_test)      # 10299 x 1
###################### Part 2: ############################
# Extracts only the measurements on the mean and standard deviation
# for each measurement
features <- read.table("./features.txt") # 561 x 2
# Getting indexes that contain "mean" and "std"
indices_MeanStd <- grep("mean\\(\\)|std\\(\\)", features[, 2]) # 66
# Good lecture: fBodyAccJerk-mean()-X
# Bad lecture: fBodyAcc-meanFreq()-X
data_total <- data_total[, indices_MeanStd] # 10299 x 66
names(data_total) <- features[indices_MeanStd, 2]
View(label_test)
View(label_train)
View(label_total)
names(sunject_total) <- "Subject"
data_filtered <- cbind(subject_total, label_total, data_total) # 10299 x 68
names(subject_total) <- "Subject"
data_filtered <- cbind(subject_total, label_total, data_total) # 10299 x 68
View(data_filtered)
length(subject_total)
length(table(subject_total))
length(unzip(subject_total))
length(unclass(subject_total))
v1=unclass(subject_total)
v1
levels(subject_total)
levels(table(subject_total))
v1=table(subject_total)
length(v1)
View(v1)
View(data_filtered)
tidy<-aggregate(data_filtered[,3:ncol(data_filtered)],list(Subject=data_filtered$subjects, Activity=data_filtered$labels), mean)
tidy<-tidy[order(tidy$Subject),]
tidy<-aggregate(data_filtered[,3:ncol(data_filtered)],list(Subject=data_filtered$subject, Activity=data_filtered$V1), mean)
tidy<-tidy[order(tidy$Subject),]
ncol(data_filtered)
tidy<-aggregate(data_filtered[,3:ncol(data_filtered)],list(Subject=data_filtered$Subject, Activity=data_filtered$V1), mean)
tidy<-tidy[order(tidy$Subject),]
View(tidy)
tidy<-aggregate(data_filtered[,3:ncol(data_filtered)],list(Subject=data_filtered$Subject, Activity=data_filtered$V1), mean, row.names=FALSE)
tidy<-tidy[order(tidy$Subject),]
View(tidy)
tidy<-aggregate(data_filtered[,3:ncol(data_filtered)],list(Subject=data_filtered$Subject, Activity=data_filtered$V1), mean, row.names=NULL)
tidy<-tidy[order(tidy$Subject),]
View(tidy)
tidy<-aggregate(data_filtered[,3:ncol(data_filtered)],list(Subject=data_filtered$Subject, Activity=data_filtered$V1), mean, row.names=NULL)
tidy<-tidy[order(tidy$Subject),]
View(tidy)
row.names(tidy) <- NULL
View(tidy)
View(tidy)
tidy<-aggregate(data_filtered[,3:ncol(data_filtered)],
list(Subject=data_filtered$Subject, Activity=data_filtered$V1),
mean,include.rownames=FALSE)
View(tidy)
tidy<-aggregate(data_filtered[,3:ncol(data_filtered)],
list(Subject=data_filtered$Subject, Activity=data_filtered$V1),
mean)
tidy<-tidy[order(tidy$Subject),]
row.names(tidy) <- NULL
View(tidy)
View(label_test)
